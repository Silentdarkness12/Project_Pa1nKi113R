//I'm a fucking cowboy (c) 2014 SGT MARK IV tm... And a bit of Pa1nki113r (R)
ACTOR DualMagnums: DoomWeapon
{
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.0
	Weapon.AmmoUse1 0 
	Weapon.SelectionOrder 100
	Weapon.AmmoGive1 0 //How much ammo can be gathered with this weapon
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "PistolBullets" //Reserve ammo type
	Weapon.AmmoType2 "AkimboAmmo" //Magazine ammo type
	Obituary "%o was clocked by %k's Double Magnums." //Kill message
    AttackSound "None" //You better leave this clear
	Inventory.Pickupmessage "" //Pickup message
    +WEAPON.NOAUTOAIM //Makes this weapon never autoaim, so recoil can work better
    Scale 0.6 //Weapon's pickup sprite size
	+WEAPON.NOAUTOFIRE
	States
	{
	
	Spawn:
	TNT1 A 100//Pickup sprite
	Loop
	
	Ready:
		P4SS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire
		
		
	Fire:
	P4W2 A 1 A_WeaponReady(WRF_NOFIRE)
	Goto ReadyToFire
	
	ReadyToFire:
		P4W2 A 1 A_WeaponReady(WRF_NOFIRE)// Weapon is ready to fire
		//TNT1 A 0 A_JumpIfInventory("IsFiringSecondary", 1, 1)
		//TNT1 A 0 A_GunFlash
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload2") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("DoGrenade", 1, "ThrowGrenade")//DoMine
		TNT1 A 0 A_JumpIfInventory("DoMine", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		Loop
		
	NoDualWield:
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		TNT1 A 0 A_SelectWeapon("Revolver")
		Goto Select
		
	Deselect:
		TNT1 AAAAAA 0 A_Lower
		TNT1 A 1 A_Lower //Makes player switch weapons faster
		Wait
	Select:
		TNT1 A 0 A_TakeInventory("GoWeaponSpecialAbility", 1)
		TNT1 A 0 A_TakeInventory("FistsSelected",1)
		TNT1 A 0 A_TakeInventory("SawSelected",1)
		TNT1 A 0 A_TakeInventory("SledgeSelected",1)
		TNT1 A 0 A_TakeInventory("HandgunSelected",1)
		TNT1 A 0 A_GiveInventory("DualHandgunSelected",1)
		TNT1 A 0 A_TakeInventory("RevolverSelected",1)
		TNT1 A 0 A_TakeInventory("ShotgunSelected",1)
		TNT1 A 0 A_TakeInventory("SSGSelected",1)
		TNT1 A 0 A_TakeInventory("ASGSelected",1)
		TNT1 A 0 A_TakeInventory("QSGSelected",1)
		TNT1 A 0 A_TakeInventory("MinigunSelected",1)
		TNT1 A 0 A_TakeInventory("NewChaingunSelected",1)	
		TNT1 A 0 A_TakeInventory("RocketLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("GrenadeLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("SGLSelected",1)
		TNT1 A 0 A_TakeInventory("PlasmaGunSelected",1)
		TNT1 A 0 A_TakeInventory("M2Selected",1)	
		TNT1 A 0 A_TakeInventory("FreezerSelected",1)
		TNT1 A 0 A_TakeInventory("RailGunSelected",1)
		TNT1 A 0 A_TakeInventory("BFGSelected",1)
		TNT1 A 0 A_TakeInventory("BFGBeamSelected",1)
		TNT1 A 0 A_TakeInventory("BHCSelected",1)
		TNT1 A 0 A_TakeInventory("RevenantLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("FlameCannonSelected",1)
		TNT1 A 0 A_TakeInventory("HellRifleSelected",1)
		TNT1 A 0 A_TakeInventory("LandMineSelected",1)
		TNT1 A 0 A_TakeInventory("UACSMGSelected",1)
		TNT1 A 0 A_TakeInventory("SubMachineGunSelected",1)
		TNT1 A 0 A_TakeInventory("LostSoulSelected",1)
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1)
	
		TNT1 A 0 A_Raise //Makes the weapon always be selected fast
		Wait
	
	DryFire:
	    P4W2 D 1 A_PlaySound("DRYFIRE", 1)
		P4W2 A 3
		Goto ReadyToFire
	 
	FireLeftGun:
	    P4W2 A 1
		TNT1 A 0 A_JumpIfInventory("AkimboAmmo", 1, 1)//First of all, checks if there is ammo inside the gun
		Goto Reload//Couldn't find any ammo. Reload
		
		TNT1 A 0 A_JumpIfInventory("LeftMagumAmmo", 1, 1)//Checks if there is ammo inside the left Rifle
		Goto DryFire//Couldn't find any ammo. Don't fire.
		
		TNT1 A 0 A_TakeInventory("AkimboAmmo", 1)//Removes 1 ammo from magazine
		TNT1 A 0 A_AlertMonsters
	    P4W2 B 1 BRIGHT A_FireBullets(5,0.9,-1,36,"BulletPuff",1)//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		TNT1 A 0 A_PlaySound("revolver/fire", 4)//Play gun fire sound
		TNT1 A 0 ACS_Execute(282, 0, 0, 0, 0)
		P4W2 C 2 //A_FireCustomMissile("RifleCaseSpawn",0,0,6,4) //Ejetts empty brass
		P4W2 C 0 A_SetPitch(-1.05 + pitch)//Vertical recoil down
		P4W2 D 1 //A_Refire
		P4W2 AAA 1
		TNT1 A 0 A_TakeInventory("LeftMagumAmmo", 1)//Remove the fake ammo
		TNT1 A 0 A_JumpIfInventory("AkimboAmmo", 1, 1)//Checks if there is ammo inside the gun
		Goto Reload//Couldn't find any ammo. Reload.
		P4W2 A 0
		Goto ReadyToFire//No need to reload. Get back to Ready state.
		
	Flash:	
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		P4W1 A 1
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "FireRightGun")
		//P4W1 A 1
		Loop
	
	DontFlash:
	    TNT1 A 1
		Goto Flash
	
	FireRightGun:
	    P4W1 A 1
		
		TNT1 A 0 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		TNT1 A 0 A_GiveInventory("IsFiringSecondary", 1)
		TNT1 A 0 A_JumpIfInventory("AkimboAmmo", 1, 2)//First of all, checks if there is ammo inside the gun
		TNT1 A 0 A_GiveInventory("IsReloading", 1)//Couldn't find any ammo. Reload
		Goto Flash//Couldn't find any ammo. Reload
		
		TNT1 A 0 A_JumpIfInventory("RightMagumAmmo", 1, 1)//Checks if there is ammo inside the left Rifle
		Goto DryFire2//Couldn't find any ammo. Don't fire.
		
		TNT1 A 0 A_TakeInventory("AkimboAmmo", 1)//Removes 1 ammo from magazine
		
		TNT1 A 0 A_AlertMonsters
	    P4W1 B 1 BRIGHT A_FireBullets(5,0.9,-1,36,"BulletPuff",1)//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		TNT1 A 0 A_PlaySound("revolver/fire", 5)//Play gun fire sound
		TNT1 A 0 ACS_Execute(282, 0, 0, 0, 0)
		P4W1 C 2 //A_FireCustomMissile("RifleCaseSpawn",0,0,6,4) //Ejetts empty brass
		P4W1 C 0 A_SetPitch(-0.8 + pitch)//Vertical recoil down
		P4W1 D 1 //A_Refire
		TNT1 A 0 A_TakeInventory("RightMagumAmmo", 1)//Remove the fake ammo
		P4W1 AAA 1
		TNT1 A 0 A_JumpIfInventory("AkimboAmmo", 1, 1)//Checks if there is ammo inside the gun
		TNT1 A 0 A_GiveInventory("IsReloading", 1)//Couldn't find any ammo. Reload
		Goto Flash
		
	DryFIre2:
	
	    P4W1 D 1 A_PlaySound("weapons/empty", 1)
		P4W1 AAA 1 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		Goto Flash	
		
		
		
	//////
	
	Reload:
	Reload2:
	    
	    P4SS F 1 //Always leave one free line before the reload animation to prevent bugs
		TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
		TNT1 A 0 A_JumpIfInventory("AkimboAmmo", 12, "ReadytoFire")//Checks if the weapon is not fully reloaded, if yes, cancel reload.
		TNT1 A 0 A_PlaySound("DRYFIRE", 1)
		TNT1 A 0 A_JumpIfInventory("PistolBullets", 1, 1)//Checks if you have spare ammo
		Goto ReadyToFire//Identified that you have no spare ammo. Get back to Ready animation
		TNT1 A 0 A_GiveInventory("StopDualWield", 1)
        
	Refill:	
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("PistolBullets", 1, 1)//Check if you have spare ammo again. This line is necessary in case you don't have enough ammo to fill an entire Cell.
		Goto FinishReload//Gun is fully loaded. Go to finish animation
	    TNT1 A 0 A_TakeInventorY("PistolBullets", 1)//Removes one spare bullet
		TNT1 A 0 A_GiveInventory("AkimboAmmo", 1)//Puts one bullet inside the Cell
		TNT1 A 0 A_JumpIfInventory("AkimboAmmo", 12, "FinishReload")//Checks if weapons is full
		Loop
		
	 FinishReload:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("LeftMagumAmmo", 6, "FinishReloadRightOnly")
		TNT1 A 0 A_JumpIfInventory("RightMagumAmmo", 6, "FinishReloadLeftOnly")
		TNT1 A 0 A_GiveInventory("LeftMagumAmmo", 6)
		TNT1 A 0 A_GiveInventory("RightMagumAmmo", 6)
		
		P4SS EDCBA 1
		R4RL ABCDEF 1
		TNT1 A 0 A_PlaySound("PistolReload2", 4)
		R4RL EFGHIJK 2
		TNT1 AAAAAA 0 A_FireCustomMissile("RifleCaseSpawn",-2,0,8,0)
		R4RL LMN 2
		TNT1 A 0 A_PlaySound("insertshell", 3)
		R4RL OP 2
		
		R4RL QRSTUV 2
		
		R4RL WXYZ 2
		TNT1 A 0 A_PlaySound("PistolReload2", 5)
		R5RL ABC 1
		P4SS AAAAA 1
		TNT1 A 0 A_GunFlash
		
		R4RR ABCDEF 1
		TNT1 A 0 A_PlaySound("PistolReload2", 4)
		R4RR EFGHIJK 2
		TNT1 AAAAAA 0 A_FireCustomMissile("RifleCaseSpawn",-2,0,8,0)
		R4RR LMN 2
		TNT1 A 0 A_PlaySound("insertshell", 3)
		R4RR OP 2
		
		R4RR QRSTUV 2
		
		R4RR WXYZ 2
		TNT1 A 0 A_PlaySound("PistolReload2", 5)
		R5RR ABC 2
		P4SS ABCDE 1
		
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire
		
		
		
	
	FinishReloadLeftOnly:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_GiveInventory("LeftMagumAmmo", 12)
		TNT1 A 0 A_GiveInventory("RightMagumAmmo", 12)
		P4SS EDCBA 1
		R4RR ABCDEF 1
		TNT1 A 0 A_PlaySound("PistolReload2", 4)
		R4RR EFGHIJK 2
		TNT1 AAAAAA 0 A_FireCustomMissile("RifleCaseSpawn",-2,0,8,0)
		R4RR LMN 2
		TNT1 A 0 A_PlaySound("insertshell", 3)
		R4RR OP 2
		
		R4RR QRSTUV 2
		
		R4RR WXYZ 2
		TNT1 A 0 A_PlaySound("PistolReload2", 5)
		R5RR ABC 2
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		P4SS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire	
		
	FinishReloadRightOnly:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_GiveInventory("LeftMagumAmmo", 12)
		TNT1 A 0 A_GiveInventory("RightMagumAmmo", 12)
		P4SS EDCBA 1
		R4RL ABCDEF 1
		TNT1 A 0 A_PlaySound("PistolReload2", 4)
		R4RL EFGHIJK 2
		TNT1 AAAAAA 0 A_FireCustomMissile("RifleCaseSpawn",-2,0,8,0)
		R4RL LMN 2
		TNT1 A 0 A_PlaySound("insertshell", 3)
		R4RL OP 2
		
		R4RL QRSTUV 2
		
		R4RL WXYZ 2
		TNT1 A 0 A_PlaySound("PistolReload2", 5)
		R5RL ABC 2
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		P4SS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire	
	
	
	
	/////
		
		
	 ThrowMine:
	 ThrowGrenade:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("DoGrenade", 1)
		TNT1 A 0 A_TakeInventory("DoMine", 1)
		P4W2 A 1
		TNT1 A 0 A_Print("You can't throw right now!")
		Goto Ready+12
		
		
	FlashKicking:
		P4SS F 1 
		P4SS F 1 
		P4SS E 1 
		P4SS D 3 
		P4SS C 3
		P4SS D 3 
		P4SS E 1 
		P4SS F 1 
		P4SS F 1 
		P4W2 AAA 1 
		Goto Flash
		
	FlashAirKicking:
		P4SS F 1 
		P4SS F 1 
		P4SS E 1 
		P4SS D 3 
		P4SS C 3
		P4SS D 3 
		P4SS E 1 
		P4SS F 1 
		P4SS F 1 
		P4W2 AAAA 1 
		Goto Flash
		
	FlashSlideKicking:
		P4SS FE 2 
		P4SS DDCCCBBBAAA 2  
		Goto Flash
		
	FlashSlideKickingStop:
		//TNT1 A 0
		P4SS ABCDEF 1 
		P4W2 A 1 
		Goto Flash

    DoKick:
	    TNT1 A 0
		TNT1 A 0 A_TakeInventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSmode",1)
		NULL A 0 A_JumpIf (momZ > 0, "AirKick")
		NULL A 0 A_JumpIf (momZ < 0, "AirKick")
		NULL A 0 A_JumpIf(Height < 54, "SlideKick")
        TNT1 A 0 A_JumpIfInventory("PowerStrength",1,"BerserkerKick")
		TNT1 A 0 A_PlaySound("KICK", 1)
		TNT1 A 0 SetPlayerProperty(0,1,0)
		TNT1 A 0 A_GunFlash("FlashKicking")
		TNT1 A 0 A_SetAngle(-0.5 + angle)
		TNT1 A 1 A_SetPitch(+0.5 + pitch)
		TNT1 A 0 A_SetAngle(-0.5 + angle)
		TNT1 A 1 A_SetPitch(+0.5 + pitch)
		KICK B 1 A_SetPitch(+0.5 + pitch)
		TNT1 A 0 A_SetAngle(-0.5 + angle)
		KICK C 1 A_SetAngle(-0.5 + angle)
		TNT1 A 0 A_SetAngle(+0.5 + angle)
		KICK D 1 A_SetPitch(+1.25 + pitch)
		RIfF A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
		
        KICK H 3 
		TNT1 A 0 A_SetAngle(+1 + angle)
		TNT1 A 0 A_Recoil(-1)
		KICK A 0 A_TakeInventory("Kicking",1)
		KICK I 1 
		TNT1 A 0 A_SetAngle(+1 + angle)
		KICK G 1 A_SetPitch(-0.5 + pitch)
		KICK F 1 A_SetPitch(-0.5 + pitch)
		TNT1 A 0 A_SetAngle(+0.5 + angle)
		KICK E 1 A_SetPitch(-0.5 + pitch)
		TNT1 A 0 A_SetAngle(+0.5 + angle)
		KICK D 1 A_SetAngle(+0.5 + angle)
		TNT1 A 0 A_SetPitch(-0.5 + pitch)
		KICK C 1 A_SetAngle(-0.5 + angle)
		KICK B 1 A_SetPitch(-1.25 + pitch)
		KICK A 1 
		TNT1 A 0 SetPlayerProperty(0,0,0)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto Ready+6
		
	SlideKick:
		TNT1 A 0 A_Jumpifinventory("PowerStrength",1,"SuperSlideKick")
		TNT1 A 0 ACS_Execute(5922, 0, 0, 0, 0)
		TNT1 A 0 A_PlaySound("KICK", 1)
		TNT1 A 0 A_Recoil (-13)
		TNT1 A 0 A_GunFlash("FlashSlideKicking")
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		SLDK ABCD 1
        RIFF AA 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		SLDK F 3
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-5)
		SLDK E 3
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-5)
		SLDK F 3
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-4)
		SLDK G 3
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-4)
		SLDK F 3
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-3)
		SLDK F 3
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-2)
		
		KICK A 0 A_Takeinventory("Kicking",1)
		TNT1 A 0 A_GunFlash("FlashSlideKickingStop")
		SLDK HK 2
		TNT1 A 0 ACS_Execute(5923, 0, 0, 0, 0)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto Ready+6
		
	 LowerKick:
		KICK A 0 A_Takeinventory("Kicking",1)
		TNT1 A 0 A_GunFlash("FlashSlideKickingStop")
		SLDK HK 2
		TNT1 A 0 ACS_Execute(5923, 0, 0, 0, 0)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto Ready+6
		
	SuperSlideKick:
		TNT1 A 0 ACS_Execute(5922, 0, 0, 0, 0)
		TNT1 A 0 A_PlaySound("KICK", 1)
		TNT1 A 0 A_Recoil (-15)
		TNT1 A 0 A_GunFlash("FlashSlideKicking")
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		SLDK ABCD 1
        RIFF AA 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		SLDK F 3
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-7)
		SLDK E 3
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-7)
		SLDK F 3
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-5)
		SLDK G 3
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-5)
		SLDK F 3
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-4)
		SLDK F 3
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31)
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_Recoil (-4)
		
		KICK A 0 A_Takeinventory("Kicking",1)
		TNT1 A 0 A_GunFlash("FlashSlideKickingStop")
		SLDK HK 2
		TNT1 A 0 ACS_Execute(5923, 0, 0, 0, 0)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto Ready+6
		
    BerserkerKick:
		TNT1 A 0 A_PlaySound("KICK", 1)
		TNT1 A 0 SetPlayerProperty(0,1,0)
		TNT1 A 0 A_GunFlash("FlashKicking")
		TNT1 A 0 A_SetAngle(-0.5 + angle)
		TNT1 A 1 A_SetPitch(+0.5 + pitch)
		TNT1 A 0 A_SetAngle(-0.5 + angle)
		TNT1 A 1 A_SetPitch(+0.5 + pitch)
		KICK B 1 A_SetPitch(+0.5 + pitch)
		TNT1 A 0 A_SetAngle(-0.5 + angle)
		KICK C 1 A_SetAngle(-0.5 + angle)
		TNT1 A 0 A_SetAngle(+0.5 + angle)
		KICK D 1 A_SetPitch(+1.25 + pitch)
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -7)
		
        KICK H 3 
		TNT1 A 0 A_SetAngle(+1 + angle)
		TNT1 A 0 A_Recoil(-1)
		KICK A 0 A_TakeInventory("Kicking",1)
		KICK I 1 
		TNT1 A 0 A_SetAngle(+1 + angle)
		KICK G 1 A_SetPitch(-0.5 + pitch)
		KICK F 1 A_SetPitch(-0.5 + pitch)
		TNT1 A 0 A_SetAngle(+0.5 + angle)
		KICK E 1 A_SetPitch(-0.5 + pitch)
		TNT1 A 0 A_SetAngle(+0.5 + angle)
		KICK D 1 A_SetAngle(+0.5 + angle)
		TNT1 A 0 A_SetPitch(-0.5 + pitch)
		KICK C 1 A_SetAngle(-0.5 + angle)
		KICK B 1 A_SetPitch(-1.25 + pitch)
		KICK A 1 
		TNT1 A 0 SetPlayerProperty(0,0,0)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto Ready+6

	AirKick:
	    TNT1 A 0 A_jumpifinventory("PowerStrength",1,"SuperAirKick")
		TNT1 A 0 A_PlaySound("KICK", 1)
		TNT1 A 0 A_Recoil (-6)
		TNT1 A 0 A_GunFlash("FlashAirKicking")
		KICK JKLMN 1
        RIFF A 0 A_FireCustomMissile("AirKickAttack", 0, 0, 0, -31)
        KICK O 3
		KICK A 0 A_Takeinventory("Kicking",1)
		KICK PQRST 2
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto Ready+6

	SuperAirKick:
		TNT1 A 0 A_PlaySound("KICK", 1)
		TNT1 A 0 A_Recoil (-6)
		TNT1 A 0 A_GunFlash("FlashKicking")
		KICK JKLMN 1
        RIFF A 0 A_FireCustomMissile("SuperAirKickAttack", 0, 0, 0, -31)
        KICK O 3
		KICK A 0 A_Takeinventory("Kicking",1)
		KICK PQRST 2
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto Ready+6
		
	Steady:
	TNT1 A 1
	Goto ReadyToFire	
	
	Taunt:
		TNT1 A 0 A_TakeInventory("Zoomed", 1)
        TNT1 A 0 A_ZoomFactor(1.0)
        TNT1 A 5
		FUCK A 2
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 0, 0, -1, 0)
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", -9, 0, -1, 0)
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 9, 0, -1, 0)
        FUCK B 2 A_PlaySound("FUCK", 1)
        FUCK C 2 A_AlertMonsters
		FUCK D 15 A_TakeInventory("Taunting",1)
        FUCK CBA 5
		TNT1 A 5
		Goto Ready
	Salute:
	    TNT1 A 0 SetPlayerProperty(0,1,0)
		TNT1 A 0 A_ALertMonsters
		SALU ABCDEDCDEDCDEDCBA 4
		TNT1 A 0 A_TakeInventory("Salute1",1)
		TNT1 A 0 A_TakeInventory("Salute2",1)
		TNT1 A 0 SetPlayerProperty(0,0,0)
		Goto Ready
		
	
	}
}

ACTOR AkimboAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 12 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 12
   Inventory.Icon SMGPA0
}


ACTOR LeftMagumAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 6 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 6
   Inventory.Icon SMGPA0
}


ACTOR RightMagumAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 6 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 6
   Inventory.Icon SMGPA0
}